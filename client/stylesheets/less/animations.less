// legacy animation using CPU
.loadingIcon {
    .transition(all @animationDuration);
    .translateZ(0);
}

.dimContainer {
    .transition(opacity @animationDuration);
}

header.main {
    nav {
        ul {
            li {
                button.cancel {
                    .transition(all @animationDuration @animationType);
                }
            }
        }
    }
    .search {
        input {
            .transition(all @animationDuration/2);
        }
    }
    div.pathMenu {
        nav {
            ul li {

                input {
                    .transition(all @animationDuration @animationType);
                }

                a {
                    .transition(width @animationDuration @animationType);
                }
            }
        }
    }
}

header.main,
.mainGrid,
.messageBox,
.divider {
    .transition-property(transform, left, top, margin, height);
    .transition-duration(@animationDuration);
    .translateZ(0); // also moves the divider? why?
    // .easeBounce;

}
.contentWrapper {
    .transition-property(transform, left);
    .transition-duration(@animationDuration);
    .translateZ(0); // also moves the divider? why?
}

// grid animation
.tile {
    .transition-property(z-index, opacity);
    .transition-duration(@animationDuration);
    .transition-delay(0, 400ms);
    .translateZ(0);
    // .transition(z-index @animationDuration @animationType);

    &.medium {
        .front {
            .textBox {
                .transition(height @animationDuration/2 @animationType);
                .transition-delay(@animationDuration/1.5);
            }
        }
    }
    &.small {
        .front {
            .textBox {
                .transition(all @animationDuration/2 @animationType);
                .transition-delay(@animationDuration/1.5);
            }
        }
    }

    // 3D Flip
    .perspective(600px);

    // FRONT/BACK SIDES
    > div {
        .backface-visibility(hidden);
        .transform-style(preserve-3d);
        .transition(transform @animationDuration @animationType);
    }

}

// article animation
article.main {
    .imageZooms {
        .imageZoom {
            .background-size(cover);

            .transform-origin(left top);
            .transition-property(padding-bottom, height, width, left, visibility, background-size, background-position-y);
            .transition-delay(0s, 0s, 0s, @animationDuration/1.5, @animationDuration/1.5, @animationDuration/1.5, @animationDuration/1.5);
            .transition-duration(@animationDuration/1.5);
            // .transform(rotateY(179deg));
            // .backface-visibility(hidden);
            // .transform-style(preserve-3d);

            &.show {
                .background-size(100%, auto);
                .transition-property(left, background-position-y, background-size, width, height, padding-bottom);
                .transition-delay(0s, 0s, @animationDuration/1.5, @animationDuration/1.5, @animationDuration/1.5, @animationDuration/1.5);
                // .transition-property(width, height, padding-bottom);
                // .transition-delay(0s, 0s, 0s);
                // .transition-duration(@animationDuration*4);

                // .transform(rotateY(0deg));
            }
        }
    }
    aside.right {
        .transition(all @animationDuration);
        .transition-delay(@animationDuration);
        .easeBounce;
    }
    div.middle {
        a {
           .transition(all @animationDuration/2); 
        }
    }
}


// animation using GPU (overwrite others)
.csstransforms3d {

    header.main,
    footer.main,
    .messageBox {
        &.slideDown {
            top: 0;
            .translate3d(0,@headerHeight,0);
        }
    }
    header.main,
    .messageBox {
        &.slideRight {
            left: 0;
            .translate3d(@leftsideBarWidth,0,0);
        }
        &.slideRight.slideDown {
            .translate3d(@leftsideBarWidth,@headerHeight,0);
        }
    }
    .contentWrapper {
        &.slideRight {
            left: 0;
            .translate3d(@leftsideBarWidth,0,0);

            // .divider {
            //     margin-left: -@dividerWidth/2;
            // }
        }
    }
}
@media (max-width: 480px) {
    .csstransforms3d {

        header.main,
        footer.main,
        .messageBox {
            &.slideDown {
                .translate3d(0,@headerHeightMobile,0);
            }
        }
        header.main {
            &.slideRight.slideDown {
                .translate3d(@leftsideBarWidth,@headerHeightMobile,0);
            }
        }

        .tile {
            .transition-property(z-index, opacity);
        }
        // .contentWrapper {
        //     &.slideRight {
        //         .divider {
        //             margin-left: -@dividerWidth/4;
        //         }
        //     }
        // }
    }
}